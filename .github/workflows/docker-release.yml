name: Build and Push Docker Image on Release

on:
  push:
    branches:
      - release

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read # For actions/checkout to fetch code
    # services:
    #   ollama:
    #     image: ollama/ollama:latest
    #     ports:
    #       - 11434:11434 # Expose the default Ollama API port
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Image Name and Tags
        id: image_info
        run: |
          IMAGE_NAME=${{ github.repository_owner }}/kowalski-binary
          IMAGE_TAG_SHA=${{ github.sha }}
          IMAGE_TAG_LATEST=latest
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG_SHA=$IMAGE_TAG_SHA" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG_LATEST=$IMAGE_TAG_LATEST" >> $GITHUB_OUTPUT

      - name: Build Image with Buildah
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: Dockerfile
          image: ${{ steps.image_info.outputs.image_name }}
          tags: |
            ${{ steps.image_info.outputs.image_tag_sha }}
            ${{ steps.image_info.outputs.image_tag_latest }}

      - name: Push to GHCR
        id: push
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.image_info.outputs.image_name }}
          tags: |
            ${{ steps.image_info.outputs.image_tag_sha }}
            ${{ steps.image_info.outputs.image_tag_latest }}
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Image details
        if: steps.push.outputs.digest
        run: |
          echo "Image: ${{ steps.push.outputs.image }}"
          echo "Tags: ${{ steps.push.outputs.tags }}"
          echo "Digest: ${{ steps.push.outputs.digest }}"
          echo "Full Output: ${{ toJSON(steps.push.outputs) }}"
      - name: Create ollama network
        run: docker network create ollama-net
      - name: Run ollama service
        run: |
          docker run -d \
            --name ollama --network ollama-net \
            -p 11434:11434 
      - name: Clone external repo
        run:  |
          git clone --depth 1 https://github.com/SUSE/doc-sle /tmp/suseDocRepo
      - name: Run kowalski-binary container
        run: |
          find /tmp/suseDocRepo -type f -name "*.xml" | xargs \
          docker run \
            --name kowalski-container \
            --network ollama-net \
            -v /tmp/suseDocRepo:/tmp/suseDocRepo \
            -v /tmp/suseDoc:/tmp/suseDoc \
            -e KW_URL=http://ollama:11434/ \
            --link ollama:ollama \
            ghcr.io/${{ steps.image_info.outputs.image_name }}:${{ steps.image_info.outputs.image_tag_sha }} \
            database add
      - name: Create archive of /suseDoc
        run: |
         tar -czvf /tmp/suseDoc.tar.gz /tmp/suseDoc
      - name: Upload /suseDoc as asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }} # This assumes you are running on a release.
          asset_path: /tmp/suseDoc.tar.gz
          asset_name: suseDoc.tar.gz
          asset_content_type: application/gzip
